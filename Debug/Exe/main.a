;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 29/01/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 12,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <stdlib.h>
;#include <stdio.h>
;#include <string.h>
;
;#define latch0 PORTB.1=0;
;#define latch1 PORTB.1=1;
;#define data0 PORTB.2=1;
;#define data1 PORTB.2=0;
;#define clk0 PORTB.0=0;
;#define clk1 PORTB.0=1;
;
;unsigned char angka[10][8]={
;                       {0b11000111,
;                        0b10111011,
;                        0b10110011,
;                        0b10101011,
;                        0b10011011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11101111,
;                        0b11001111,
;                        0b11101111,
;                        0b11101111,
;                        0b11101111,
;                        0b11101111,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b11111011,
;                        0b11110111,
;                        0b11101111,
;                        0b11011111,
;                        0b10000011,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b11111011,
;                        0b11100111,
;                        0b11111011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11110111,
;                        0b11101111,
;                        0b11011011,
;                        0b10111011,
;                        0b10000011,
;                        0b11111011,
;                        0b11111011,
;                        0b11111111},
;
;                       {0b10000011,
;                        0b10111111,
;                        0b10000111,
;                        0b11111011,
;                        0b11111011,
;                        0b11111011,
;                        0b10000111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b10111111,
;                        0b10000111,
;                        0b10111011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b10000011,
;                        0b11111011,
;                        0b11110111,
;                        0b11101111,
;                        0b11011111,
;                        0b10111111,
;                        0b10111111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b10111011,
;                        0b10000011,
;                        0b10111011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b10111011,
;                        0b11000011,
;                        0b11111011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111}};

	.DSEG
;
;unsigned char fase[7][8]={
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00000111,
;                        0b01111111,
;                        0b01111111,
;                        0b00001111,
;                        0b01111111,
;                        0b01111111,
;                        0b01111111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b01110111,
;                        0b00000111,
;                        0b01110111,
;                        0b01110111,
;                        0b01110111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b01111111,
;                        0b10001111,
;                        0b11110111,
;                        0b01110111,
;                        0b10001111,
;                        0b11111111},
;
;                       {0b00000111,
;                        0b01111111,
;                        0b01111111,
;                        0b00001111,
;                        0b01111111,
;                        0b01111111,
;                        0b00000111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b11110111,
;                        0b11101111,
;                        0b11011111,
;                        0b10111111,
;                        0b00000111,
;                        0b11111111},
;
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111}};
;
;unsigned char smk[12][8]={
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b01111111,
;                        0b10001111,
;                        0b11110111,
;                        0b01110111,
;                        0b10001111,
;                        0b11111111},
;
;                       {0b01110111,
;                        0b00100111,
;                        0b01010111,
;                        0b01110111,
;                        0b01110111,
;                        0b01110111,
;                        0b01110111,
;                        0b11111111},
;
;                       {0b01110111,
;                        0b01101111,
;                        0b01011111,
;                        0b00111111,
;                        0b01011111,
;                        0b01101111,
;                        0b01110111,
;                        0b11111111},
;
;                       {0b00001111,
;                        0b01110111,
;                        0b01110111,
;                        0b00001111,
;                        0b01110111,
;                        0b01110111,
;                        0b00001111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b10111111,
;                        0b10111111,
;                        0b10111111,
;                        0b10111111,
;                        0b10111111,
;                        0b00011111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b01111111,
;                        0b10001111,
;                        0b11110111,
;                        0b01110111,
;                        0b10001111,
;                        0b11111111},
;
;                       {0b10001111,
;                        0b01110111,
;                        0b01110111,
;                        0b00000111,
;                        0b01110111,
;                        0b01110111,
;                        0b01110111,
;                        0b11111111},
;
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b00000111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b10110011,
;                        0b10101011,
;                        0b10011011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11000111,
;                        0b10111011,
;                        0b10111011,
;                        0b10000011,
;                        0b10111011,
;                        0b10111011,
;                        0b11000111,
;                        0b11111111},
;
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111}};
;
;unsigned char puluhan[10][8]={
;                       {0b00011111,
;                        0b01011111,
;                        0b01011111,
;                        0b01011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b10111111,
;                        0b00111111,
;                        0b10111111,
;                        0b10111111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b11011111,
;                        0b00011111,
;                        0b01111111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b11011111,
;                        0b00011111,
;                        0b11011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b01011111,
;                        0b01011111,
;                        0b00011111,
;                        0b11011111,
;                        0b11011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b01111111,
;                        0b00011111,
;                        0b11011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b01111111,
;                        0b00011111,
;                        0b01011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b11011111,
;                        0b11011111,
;                        0b11011111,
;                        0b11011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b01011111,
;                        0b00011111,
;                        0b01011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b00011111,
;                        0b01011111,
;                        0b00011111,
;                        0b11011111,
;                        0b00011111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111}};
;
;unsigned char satuan[10][8]={
;                       {0b11110001,
;                        0b11110101,
;                        0b11110101,
;                        0b11110101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11111011,
;                        0b11110011,
;                        0b11111011,
;                        0b11111011,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11111101,
;                        0b11110001,
;                        0b11110111,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11111101,
;                        0b11110001,
;                        0b11111101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110101,
;                        0b11110101,
;                        0b11110001,
;                        0b11111101,
;                        0b11111101,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11110111,
;                        0b11110001,
;                        0b11111101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11110111,
;                        0b11110001,
;                        0b11110101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11111101,
;                        0b11111101,
;                        0b11111101,
;                        0b11111101,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11110101,
;                        0b11110001,
;                        0b11110101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11110001,
;                        0b11110101,
;                        0b11110001,
;                        0b11111101,
;                        0b11110001,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111}};
;
;unsigned char arah[5][8]={
;                       {0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111,
;                        0b11111111},
;
;                       {0b11100111,
;                        0b11000011,
;                        0b10000001,
;                        0b00000000,
;                        0b11000011,
;                        0b11000011,
;                        0b11000011,
;                        0b11000011},
;
;                       {0b11101111,
;                        0b11001111,
;                        0b10000000,
;                        0b00000000,
;                        0b00000000,
;                        0b10000000,
;                        0b11001111,
;                        0b11101111},
;
;                       {0b11110111,
;                        0b11110011,
;                        0b00000001,
;                        0b00000000,
;                        0b00000000,
;                        0b00000001,
;                        0b11110011,
;                        0b11110111},
;
;                       {0b11000011,
;                        0b11000011,
;                        0b11000011,
;                        0b11000011,
;                        0b00000000,
;                        0b10000001,
;                        0b11000011,
;                        0b11100111}};
;
;
;// Declare your global variables here
;
;unsigned int read_adc(unsigned char adc_input);
;int sen,pot,pb,vrx,vry;
;int suhu,jx,jy,joy,menu,level,push,lastc7,latchmenu,resbit,lvlpul,lvlsat,bawah,atas,tengah;
;int i;
;int j;
;int p;
;float vADC,temp;
;int menu=0;
;char datalcd[16];
;unsigned char bitresult[8];
;
;void bitwise(int x)
; 0000 0224 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0225   int pul,sat,k;
; 0000 0226   pul=x/10;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	x -> Y+6
;	pul -> R16,R17
;	sat -> R18,R19
;	k -> R20,R21
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0227   sat=x%10;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0228   for(k=0;k<8;k++)
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0229   {
; 0000 022A     bitresult[k]=puluhan[pul][k]&satuan[sat][k];
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 022B   }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 022C }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;
;void matrix(unsigned char input_data[8])
; 0000 022F {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0230   unsigned int nilai_t16;
; 0000 0231   for(i=0;i<8;i++)
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;	input_data -> Y+2
;	nilai_t16 -> R16,R17
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0232   {
; 0000 0233     nilai_t16=(0x01<<(15-i)) + input_data[i];
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0234     latch0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0235     for(j=0;j<=15;j++)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0236     {
; 0000 0237       if((nilai_t16) & (0x01 << j))
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0238       {data1;}
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0239       else
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 023A       {data0;}
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 023B       clk1;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 023C       delay_us(10);
;PCODE: $00000074 VOL: 0
; 0000 023D       clk0;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 023E       delay_us(10);
;PCODE: $00000077 VOL: 0
; 0000 023F     }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0240     latch1;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0241   }
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0242 }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;
;void scrollmtx(unsigned int datalength, unsigned char data[datalength][8])
; 0000 0245 {
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0246     int kl,lm,mn;
; 0000 0247     unsigned char buff_geser[8];
; 0000 0248 
; 0000 0249     for(kl=0;kl<(datalength-1)*8;kl++)
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;	datalength -> Y+16
;	data -> Y+14
;	kl -> R16,R17
;	lm -> R18,R19
;	mn -> R20,R21
;	buff_geser -> Y+6
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 024A     {
; 0000 024B       for(lm=0;lm<8;lm++)
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 024C       {
; 0000 024D         buff_geser[lm]=data[kl/8][lm]<<(kl%8) | (data[kl/8+1][lm] >>(8-(kl%8)));
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 024E       }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 024F 
; 0000 0250       for(mn=0;mn<5;mn++)
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0251       {
; 0000 0252         matrix(buff_geser);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0253       }
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0254     }
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0255 }
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0259 {
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 025A // Reinitialize Timer 0 value
; 0000 025B TCNT0=0x44;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 025C // Place your code here
; 0000 025D     delay_us(100);
;PCODE: $000000F0 VOL: 0
; 0000 025E     pot=read_adc(4);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 025F     delay_us(100);
;PCODE: $000000F4 VOL: 0
; 0000 0260     pb=read_adc(5);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0261     delay_us(100);
;PCODE: $000000F8 VOL: 0
; 0000 0262     vrx=read_adc(6);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0263     delay_us(100);
;PCODE: $000000FC VOL: 0
; 0000 0264     vry=read_adc(7);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0265 
; 0000 0266     if(vrx>300 && vrx<700){jx=0;}
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0267     else if(vrx>700){jx=1;}
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0268     else if(vrx<300){jx=2;}
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0269 
; 0000 026A     if(vry>300 && vry<700){jy=0;}
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 026B     else if(vry>700){jy=1;}
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 026C     else if(jy<300){jy=2;}
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 026D 
; 0000 026E     if(jx==1 && jy==0){joy=1;}
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 026F     else if(jx==0 && jy==2){joy=2;}
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0270     else if(jx==0 && jy==1){joy=3;}
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0271     else if(jx==2 && jy==0){joy=4;}
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0272     else if(jx==0 && jy==0){joy=0;}
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0273 
; 0000 0274     if(joy==1){menu=1;}
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0275     else if(joy==2){menu=2;}
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0276     else if(joy==3){menu=3;}
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 0277     else if(joy==4){menu=4;}
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0278 
; 0000 0279     if(pb<100){push=1;}
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 027A     else if(pb>100 && pb<400){push=2;}
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 027B     else if(pb>400 && pb<700){push=3;}
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 027C     else if(pb>700 && pb<1000){push=4;}
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 027D     else if(pb>1000){push=0;}
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 027E 
; 0000 027F     if(PINC.7==0 && lastc7==1)
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 0280         {
; 0000 0281           if(latchmenu==1){latchmenu=0;}
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0282           else{latchmenu=1;}
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0283         }
; 0000 0284         lastc7=PINC.7;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0285 
; 0000 0286     if(latchmenu==0)
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0287         {
; 0000 0288 
; 0000 0289         }
; 0000 028A         else if(latchmenu==1)
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 028B         {
; 0000 028C           if(menu==1)
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 028D           {
; 0000 028E             if(push==1)
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 028F             {
; 0000 0290               p++;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0291               if(p==1){bawah+=10;if(bawah>99){bawah=0;}}
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0292               else if(p==50){p=0;}
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0293             }
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 0294             else if(push==2)
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0295             {
; 0000 0296               p++;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 0297               if(p==1){bawah++;if(bawah>99){bawah=0;}}
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0298               else if(p==50){p=0;}
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0299             }
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 029A             else if(push==3){bawah=0;}
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 029B             else if(push==4){bawah=99;}
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 029C           }
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 029D           else if(menu==2)
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 029E           {
; 0000 029F             tengah=(pot/10);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 02A0           }
; 0000 02A1           else if(menu==3)
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 02A2           {
; 0000 02A3             if(push==1)
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 02A4             {
; 0000 02A5               p++;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 02A6               if(p==1){atas+=10;if(atas>99){atas=0;}}
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 02A7               else if(p==50){p=0;}
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 02A8             }
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 02A9             else if(push==2)
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 02AA             {
; 0000 02AB               p++;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 02AC               if(p==1){atas++;if(atas>99){atas=0;}}
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 02AD               else if(p==50){p=0;}
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 02AE             }
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 02AF             else if(push==3){atas=0;}
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 02B0             else if(push==4){atas=99;}
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 02B1           }
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 02B2           else if(menu==4)
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 02B3           {
; 0000 02B4 
; 0000 02B5           }
; 0000 02B6         }
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 02B7 }
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 02BB {
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 02BC // Reinitialize Timer1 value
; 0000 02BD TCNT1H=0xCC70 >> 8;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 02BE TCNT1L=0xCC70 & 0xff;
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 02BF // Place your code here
; 0000 02C0     delay_us(100);
;PCODE: $000002BC VOL: 0
; 0000 02C1     sen=read_adc(3);
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 02C2 
; 0000 02C3     vADC=(sen/1023.00)*5.00;
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 02C4     temp=vADC/0.01;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 02C5     suhu=((int)temp)*1;
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 02C6 }
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 02CD {
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 02CE ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $000002D4 VOL: 0
;	adc_input -> Y+0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 02CF // Delay needed for the stabilization of the ADC input voltage
; 0000 02D0 delay_us(10);
;PCODE: $000002D8 VOL: 0
; 0000 02D1 // Start the AD conversion
; 0000 02D2 ADCSRA|=(1<<ADSC);
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 02D3 // Wait for the AD conversion to complete
; 0000 02D4 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 02D5 ADCSRA|=(1<<ADIF);
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 02D6 return ADCW;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 02D7 }
;PCODE: $000002E6 VOL: 0
;
;void main(void)
; 0000 02DA {
;PCODE: $000002E7 VOL: 0
; 0000 02DB // Declare your local variables here
; 0000 02DC 
; 0000 02DD // Input/Output Ports initialization
; 0000 02DE // Port A initialization
; 0000 02DF // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 02E0 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 02E1 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 02E2 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0000 02E3 
; 0000 02E4 // Port B initialization
; 0000 02E5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out
; 0000 02E6 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 02E7 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=0
; 0000 02E8 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 02E9 
; 0000 02EA // Port C initialization
; 0000 02EB // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 02EC DDRC=(1<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 02ED // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 02EE PORTC=(1<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 02EF 
; 0000 02F0 // Port D initialization
; 0000 02F1 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 02F2 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 02F3 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 02F4 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 02F5 
; 0000 02F6 // Timer/Counter 0 initialization
; 0000 02F7 // Clock source: System Clock
; 0000 02F8 // Clock value: 187,500 kHz
; 0000 02F9 // Mode: Normal top=0xFF
; 0000 02FA // OC0 output: Disconnected
; 0000 02FB // Timer Period: 1,0027 ms
; 0000 02FC TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 02FD TCNT0=0x44;
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
; 0000 02FE OCR0=0x00;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 02FF 
; 0000 0300 // Timer/Counter 1 initialization
; 0000 0301 // Clock source: System Clock
; 0000 0302 // Clock value: 12000,000 kHz
; 0000 0303 // Mode: Normal top=0xFFFF
; 0000 0304 // OC1A output: Disconnected
; 0000 0305 // OC1B output: Disconnected
; 0000 0306 // Noise Canceler: Off
; 0000 0307 // Input Capture on Falling Edge
; 0000 0308 // Timer Period: 1,1 ms
; 0000 0309 // Timer1 Overflow Interrupt: On
; 0000 030A // Input Capture Interrupt: Off
; 0000 030B // Compare A Match Interrupt: Off
; 0000 030C // Compare B Match Interrupt: Off
; 0000 030D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 030E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 030F TCNT1H=0xCC;
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 0310 TCNT1L=0x70;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 0311 ICR1H=0x00;
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 0312 ICR1L=0x00;
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0000 0313 OCR1AH=0x00;
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 0314 OCR1AL=0x00;
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 0315 OCR1BH=0x00;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 0316 OCR1BL=0x00;
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 0317 
; 0000 0318 // Timer/Counter 2 initialization
; 0000 0319 // Clock source: System Clock
; 0000 031A // Clock value: Timer2 Stopped
; 0000 031B // Mode: Normal top=0xFF
; 0000 031C // OC2 output: Disconnected
; 0000 031D ASSR=0<<AS2;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 031E TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 031F TCNT2=0x00;
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 0320 OCR2=0x00;
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0000 0321 
; 0000 0322 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0323 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 0324 
; 0000 0325 // External Interrupt(s) initialization
; 0000 0326 // INT0: Off
; 0000 0327 // INT1: Off
; 0000 0328 // INT2: Off
; 0000 0329 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 032A MCUCSR=(0<<ISC2);
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 032B 
; 0000 032C // USART initialization
; 0000 032D // USART disabled
; 0000 032E UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 032F 
; 0000 0330 // Analog Comparator initialization
; 0000 0331 // Analog Comparator: Off
; 0000 0332 // The Analog Comparator's positive input is
; 0000 0333 // connected to the AIN0 pin
; 0000 0334 // The Analog Comparator's negative input is
; 0000 0335 // connected to the AIN1 pin
; 0000 0336 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 0337 
; 0000 0338 // ADC initialization
; 0000 0339 // ADC Clock frequency: 750,000 kHz
; 0000 033A // ADC Voltage Reference: AVCC pin
; 0000 033B // ADC Auto Trigger Source: ADC Stopped
; 0000 033C ADMUX=ADC_VREF_TYPE;
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 033D ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 033E SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
; 0000 033F 
; 0000 0340 // SPI initialization
; 0000 0341 // SPI disabled
; 0000 0342 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 0343 
; 0000 0344 // TWI initialization
; 0000 0345 // TWI disabled
; 0000 0346 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 0347 
; 0000 0348 // Alphanumeric LCD initialization
; 0000 0349 // Connections are specified in the
; 0000 034A // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 034B // RS - PORTD Bit 1
; 0000 034C // RD - PORTD Bit 0
; 0000 034D // EN - PORTD Bit 2
; 0000 034E // D4 - PORTD Bit 3
; 0000 034F // D5 - PORTD Bit 4
; 0000 0350 // D6 - PORTD Bit 5
; 0000 0351 // D7 - PORTD Bit 6
; 0000 0352 // Characters/line: 16
; 0000 0353 lcd_init(16);
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 0354 
; 0000 0355 // Global enable interrupts
; 0000 0356 #asm("sei")
;PCODE: $00000330 VOL: 0
	sei
;PCODE: $00000331 VOL: 0
; 0000 0357 
; 0000 0358 lcd_gotoxy(0,0);
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 0359 sprintf(datalcd,"ESP FASE 3");
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 035A lcd_puts(datalcd);
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 035B lcd_gotoxy(0,1);
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0000 035C sprintf(datalcd,"LKS KE-28/2020");
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 035D lcd_puts(datalcd);
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 035E 
; 0000 035F PORTD.7=1;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 0360 delay_ms(50);
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 0361 PORTD.7=0;
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 0362 delay_ms(50);
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 0363 PORTD.7=1;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 0364 delay_ms(50);
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 0365 PORTD.7=0;
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 0366 
; 0000 0367 scrollmtx(12,smk);
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
; 0000 0368 
; 0000 0369 while (1)
;PCODE: $00000365 VOL: 0
; 0000 036A       {
; 0000 036B       // Place your code here
; 0000 036C         if(latchmenu==0)
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0000 036D         {
; 0000 036E           if(menu==1)
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 036F           {
; 0000 0370             lcd_gotoxy(0,0);
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 0371             sprintf(datalcd,"BATAS BAWAH     ");
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 0372             lcd_puts(datalcd);
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 0373             lcd_gotoxy(0,1);
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 0374             sprintf(datalcd,"%2d              ",bawah);
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 0375             lcd_puts(datalcd);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0376             matrix(angka[1]);
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
; 0000 0377           }
; 0000 0378           if(menu==2)
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 0379           {
; 0000 037A             lcd_gotoxy(0,0);
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 037B             sprintf(datalcd,"BATAS TENGAH   ");
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 037C             lcd_puts(datalcd);
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 037D             lcd_gotoxy(0,1);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 037E             sprintf(datalcd,"%2d             ",tengah);
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 037F             lcd_puts(datalcd);
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0380             matrix(angka[2]);
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0381           }
; 0000 0382           if(menu==3)
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
; 0000 0383           {
; 0000 0384             lcd_gotoxy(0,0);
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 0385             sprintf(datalcd,"BATAS ATAS      ");
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0386             lcd_puts(datalcd);
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 0387             lcd_gotoxy(0,1);
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 0388             sprintf(datalcd,"%2d              ",atas);
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 0389             lcd_puts(datalcd);
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 038A             matrix(angka[3]);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 038B           }
; 0000 038C           if(menu==4)
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 038D           {
; 0000 038E             lcd_gotoxy(0,0);
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
; 0000 038F             sprintf(datalcd,"KOMPARATOR      ");
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 0390             lcd_puts(datalcd);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 0391             lcd_gotoxy(0,1);
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 0392             sprintf(datalcd,"TEMP:%.2f'C  ",temp);
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 0393             lcd_puts(datalcd);
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 0394             matrix(angka[4]);
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 0395           }
; 0000 0396         }
;PCODE: $00000407 VOL: 0
; 0000 0397         else if(latchmenu==1)
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0000 0398         {
; 0000 0399           if(menu==1)
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 039A           {
; 0000 039B             lcd_gotoxy(0,0);
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 039C             sprintf(datalcd,"BATAS BAWAH     ");
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 039D             lcd_puts(datalcd);
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 039E             lcd_gotoxy(0,1);
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 039F             sprintf(datalcd,"TEKAN S1 s/d S4 ");
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 03A0             lcd_puts(datalcd);
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
; 0000 03A1             bitwise(bawah);
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
; 0000 03A2             matrix(bitresult);
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
; 0000 03A3           }
; 0000 03A4           else if(menu==2)
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 03A5           {
; 0000 03A6             lcd_gotoxy(0,0);
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 03A7             sprintf(datalcd,"NILAI TENGAH    ");
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 03A8             lcd_puts(datalcd);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
; 0000 03A9             lcd_gotoxy(0,1);
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 03AA             sprintf(datalcd,"PUTAR POTENSIO  ");
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 03AB             lcd_puts(datalcd);
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 03AC             bitwise(tengah);
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 03AD             matrix(bitresult);
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 03AE           }
; 0000 03AF           else if(menu==3)
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 03B0           {
; 0000 03B1             lcd_gotoxy(0,0);
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 03B2             sprintf(datalcd,"NILAI ATAS      ");
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 03B3             lcd_puts(datalcd);
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 03B4             lcd_gotoxy(0,1);
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 03B5             sprintf(datalcd,"TEKAN S1 s/d S4 ");
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 03B6             lcd_puts(datalcd);
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 03B7             bitwise(atas);
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
; 0000 03B8             matrix(bitresult);
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 03B9           }
; 0000 03BA           else if(menu==4)
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
; 0000 03BB           {
; 0000 03BC             lcd_gotoxy(0,0);
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 03BD             sprintf(datalcd,"%2d %2d %2d      ",bawah,tengah,atas);
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 03BE             lcd_puts(datalcd);
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0000 03BF             lcd_gotoxy(0,1);
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
; 0000 03C0             sprintf(datalcd,"TEMP:%.2f'C",temp);
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
; 0000 03C1             lcd_puts(datalcd);
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 03C2             if(temp<bawah){matrix(arah[4]);}
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 03C3             else if(temp>bawah && temp<tengah){matrix(arah[2]);}
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 03C4             else if(temp>tengah && temp<atas){matrix(arah[3]);}
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 03C5             else if(temp>atas){matrix(arah[1]);}
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 03C6           }
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
; 0000 03C7         }
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
; 0000 03C8 
; 0000 03C9 //        lcd_gotoxy(0,0);
; 0000 03CA //        sprintf(datalcd,"x=%4d y=%4d",vrx,vry);
; 0000 03CB //        lcd_puts(datalcd);
; 0000 03CC //
; 0000 03CD //        if(menu==0)
; 0000 03CE //        {
; 0000 03CF //          lcd_gotoxy(0,0);
; 0000 03D0 //          sprintf(datalcd,"MENU PROGRAM   ");
; 0000 03D1 //          lcd_puts(datalcd);
; 0000 03D2 //          lcd_gotoxy(0,1);
; 0000 03D3 //          sprintf(datalcd,"TEKAN S1 s/d S3");
; 0000 03D4 //          lcd_puts(datalcd);
; 0000 03D5 //        }
; 0000 03D6 //        else if(menu==1)
; 0000 03D7 //        {
; 0000 03D8 //          lcd_gotoxy(0,0);
; 0000 03D9 //          sprintf(datalcd,"SUHU= %.2f'C",temp);
; 0000 03DA //          lcd_puts(datalcd);
; 0000 03DB //          lcd_gotoxy(0,1);
; 0000 03DC //          sprintf(datalcd,"S4 KE MENU     ");
; 0000 03DD //          lcd_puts(datalcd);
; 0000 03DE //        }
; 0000 03DF //        else if(menu==2)
; 0000 03E0 //        {
; 0000 03E1 //          lcd_gotoxy(0,0);
; 0000 03E2 //          sprintf(datalcd,"ADC POT= %4d",pot);
; 0000 03E3 //          lcd_puts(datalcd);
; 0000 03E4 //          lcd_gotoxy(0,1);
; 0000 03E5 //          sprintf(datalcd,"S4 KE MENU     ");
; 0000 03E6 //          lcd_puts(datalcd);
; 0000 03E7 //        }
; 0000 03E8 //        else if(menu==3)
; 0000 03E9 //        {
; 0000 03EA //          lcd_gotoxy(0,0);
; 0000 03EB //          sprintf(datalcd,"X=%4d Y=%4d",vrx,vry);
; 0000 03EC //          lcd_puts(datalcd);
; 0000 03ED //          lcd_gotoxy(0,1);
; 0000 03EE //          sprintf(datalcd,"S4 KE MENU     ");
; 0000 03EF //          lcd_puts(datalcd);
; 0000 03F0 //        }
; 0000 03F1 //        matrix(angka[menu]);
; 0000 03F2       }
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 03F3 }
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
